<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>shardingjdbc分表分库，主从分离</title>
      <link href="/2018/09/26/shardingjdbc%E5%88%86%E8%A1%A8%E5%88%86%E5%BA%93%EF%BC%8C%E4%B8%BB%E4%BB%8E%E5%88%86%E7%A6%BB/"/>
      <url>/2018/09/26/shardingjdbc%E5%88%86%E8%A1%A8%E5%88%86%E5%BA%93%EF%BC%8C%E4%B8%BB%E4%BB%8E%E5%88%86%E7%A6%BB/</url>
      <content type="html"><![CDATA[<p>使用shardingjdbc需要修改mybatis的数据源。原来是mybatis直接引用dataSource，现在需要将dataSource注入到shardingjdbc，然后在将shardingjdbc的shardingDataSource注入给mybatis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--数据源--&gt;</span><br><span class="line">&lt;bean name=&quot;dataSource&quot; class=&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span><br><span class="line">init-method=&quot;init&quot; destroy-method=&quot;close&quot;&gt;</span><br><span class="line">&lt;property name=&quot;url&quot; value=&quot;$&#123;db.master.url&#125;&quot; /&gt;</span><br><span class="line">&lt;property name=&quot;username&quot; value=&quot;$&#123;db.master.user&#125;&quot; /&gt;</span><br><span class="line">&lt;property name=&quot;password&quot; value=&quot;$&#123;db.master.password&#125;&quot; /&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></p><p>对apply_orde，apply_device这两张表进行分表，按createtime进行分表，每周分一张表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--shardingjdbc的规则--&gt;</span><br><span class="line">&lt;sharding:standard-strategy id=&quot;orderTableShardingStrategy&quot; sharding-column=&quot;createtime&quot; range-algorithm-class=&quot;com.dsp.common.algorithm.RangleTableShardingAlgorithm&quot; precise-algorithm-class=&quot;com.dsp.common.algorithm.PreciseTableShardingAlgorithm&quot;/&gt;</span><br><span class="line">    &lt;sharding:standard-strategy id=&quot;applyDeviceTableShardingStrategy&quot; sharding-column=&quot;createtime&quot; range-algorithm-class=&quot;com.dsp.common.algorithm.RangleTableShardingAlgorithm&quot; precise-algorithm-class=&quot;com.dsp.common.algorithm.PreciseTableShardingAlgorithm&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;sharding:data-source id=&quot;shardingDataSource&quot;&gt;</span><br><span class="line">        &lt;sharding:sharding-rule data-source-names=&quot;dataSource&quot;&gt;</span><br><span class="line">            &lt;sharding:table-rules&gt;</span><br><span class="line">                &lt;sharding:table-rule logic-table=&quot;apply_order&quot; actual-data-nodes=&quot;dataSource.apply_order_2017$&#123;1..54&#125;&quot; table-strategy-ref=&quot;orderTableShardingStrategy&quot; /&gt;</span><br><span class="line">                &lt;sharding:table-rule logic-table=&quot;apply_device&quot; actual-data-nodes=&quot;dataSource.apply_device_2017$&#123;1..54&#125;&quot; table-strategy-ref=&quot;applyDeviceTableShardingStrategy&quot; /&gt;</span><br><span class="line">            &lt;/sharding:table-rules&gt;</span><br><span class="line">            &lt;sharding:binding-table-rules&gt;</span><br><span class="line">                &lt;sharding:binding-table-rule logic-tables=&quot;apply_order,apply_device&quot;/&gt;</span><br><span class="line">            &lt;/sharding:binding-table-rules&gt;</span><br><span class="line">        &lt;/sharding:sharding-rule&gt;</span><br><span class="line">        &lt;sharding:props&gt;</span><br><span class="line">            &lt;prop key=&quot;sql.show&quot;&gt;true&lt;/prop&gt;</span><br><span class="line">        &lt;/sharding:props&gt;</span><br><span class="line">    &lt;/sharding:data-source&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--mybatis部分配置--&gt;</span><br><span class="line"> &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;shardingDataSource&quot;/&gt;</span><br><span class="line">        &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath*:mapper/*.xml&quot;/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">    &lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;shardingDataSource&quot; /&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 精确的查询，用于=，in等精确查询</span><br><span class="line"> */</span><br><span class="line">public final class PreciseTableShardingAlgorithm implements PreciseShardingAlgorithm&lt;Date&gt; &#123;</span><br><span class="line">    Logger logger = LoggerFactory.getLogger(PreciseTableShardingAlgorithm.class);</span><br><span class="line">    public String doSharding(final Collection&lt;String&gt; availableTargetNames, final PreciseShardingValue&lt;Date&gt; shardingValue) &#123;</span><br><span class="line"></span><br><span class="line">        SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy&quot;);</span><br><span class="line">        String format = sdf.format(shardingValue.getValue());</span><br><span class="line">        Integer week = getWeek(shardingValue.getValue());</span><br><span class="line">        String tableName = format+week;</span><br><span class="line">        for (String each : availableTargetNames) &#123;</span><br><span class="line">            if (each.endsWith(tableName)) &#123;</span><br><span class="line">                logger.info(&quot;精确查询返回的表名：&quot;+each);</span><br><span class="line">                return each;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        throw new UnsupportedOperationException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取当前日期的周数</span><br><span class="line">     * @param date</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private Integer getWeek(Date date)&#123;</span><br><span class="line">        Calendar instance = Calendar.getInstance();</span><br><span class="line">        instance.setFirstDayOfWeek(Calendar.MONDAY);</span><br><span class="line">        instance.setTime(date);</span><br><span class="line">        int weekNum = instance.get(Calendar.WEEK_OF_YEAR);</span><br><span class="line">        //如果为12月份</span><br><span class="line">        if((instance.get(Calendar.MONTH)+1)==12)&#123;</span><br><span class="line">            instance.add(Calendar.WEEK_OF_YEAR,-1);</span><br><span class="line">            int weekNumBefore = instance.get(Calendar.WEEK_OF_YEAR);</span><br><span class="line">            if(weekNum&lt;weekNumBefore)&#123;</span><br><span class="line">                return weekNumBefore+1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return weekNum;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 范围查询分表</span><br><span class="line"> */</span><br><span class="line">public final class RangleTableShardingAlgorithm implements RangeShardingAlgorithm&lt;Date&gt; &#123;</span><br><span class="line"></span><br><span class="line">    Logger logger = LoggerFactory.getLogger(RangleTableShardingAlgorithm.class);</span><br><span class="line"></span><br><span class="line">    public Collection&lt;String&gt; doSharding(Collection&lt;String&gt; collection, RangeShardingValue&lt;Date&gt; rangeShardingValue) &#123;</span><br><span class="line"></span><br><span class="line">        Collection&lt;String&gt; result = new LinkedHashSet&lt;String&gt;(collection.size());</span><br><span class="line"></span><br><span class="line">        Range&lt;Date&gt; valueRange = rangeShardingValue.getValueRange();</span><br><span class="line">        Date beginDate = valueRange.lowerEndpoint();</span><br><span class="line">        Date endDate = valueRange.upperEndpoint();</span><br><span class="line"></span><br><span class="line">        SimpleDateFormat sdfYear = new SimpleDateFormat(&quot;yyyy&quot;);</span><br><span class="line">        Integer beginDateYear = Integer.valueOf(sdfYear.format(beginDate));</span><br><span class="line">        Integer endDateYear = Integer.valueOf(sdfYear.format(endDate));</span><br><span class="line">        Integer beginWeek = getWeek(beginDate);</span><br><span class="line">        Integer endWeek = getWeek(endDate);</span><br><span class="line">        //年份相等</span><br><span class="line">        if(beginDateYear.equals(endDateYear))&#123;</span><br><span class="line">            //比较月份</span><br><span class="line"></span><br><span class="line">            for (int i = beginWeek;i&lt;=endWeek;i++)&#123;</span><br><span class="line">                for (String tableName :collection)&#123;</span><br><span class="line">                    if(tableName.endsWith(beginDateYear+&quot;&quot;+i))&#123;</span><br><span class="line">                        result.add(tableName);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            //年份不等,遍历年份</span><br><span class="line">            for (int i = beginDateYear;i&lt;=endDateYear;i++)&#123;</span><br><span class="line">                //遍历月份</span><br><span class="line">                if(i==endDateYear)&#123;</span><br><span class="line">                    for (int j = beginWeek;j&lt;=endWeek;j++)&#123;</span><br><span class="line">                        for (String tableName :collection)&#123;</span><br><span class="line">                            if(tableName.endsWith(i+&quot;&quot;+j))&#123;</span><br><span class="line">                                result.add(tableName);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    for (int j = beginWeek;j&lt;=12;j++)&#123;</span><br><span class="line">                        for (String tableName :collection)&#123;</span><br><span class="line">                            if(tableName.endsWith(i+&quot;&quot;+j))&#123;</span><br><span class="line">                                result.add(tableName);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(&quot;范围查询返回的表名：&quot;+result);</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取当前日期的周数</span><br><span class="line">     * @param date</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private Integer getWeek(Date date)&#123;</span><br><span class="line">        Calendar instance = Calendar.getInstance();</span><br><span class="line">        instance.setFirstDayOfWeek(Calendar.MONDAY);</span><br><span class="line">        instance.setTime(date);</span><br><span class="line">        int weekNum = instance.get(Calendar.WEEK_OF_YEAR);</span><br><span class="line">        //如果为12月份</span><br><span class="line">        if((instance.get(Calendar.MONTH)+1)==12)&#123;</span><br><span class="line">            instance.add(Calendar.WEEK_OF_YEAR,-1);</span><br><span class="line">            int weekNumBefore = instance.get(Calendar.WEEK_OF_YEAR);</span><br><span class="line">            if(weekNum&lt;weekNumBefore)&#123;</span><br><span class="line">                return weekNumBefore+1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return weekNum;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的地方<br>使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;context:property-placeholder location=&quot;classpath*:application_local.properties&quot; ignore-unresolvable=&quot;true&quot;/&gt;</span><br></pre></td></tr></table></figure></p><p>不要使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean</span><br><span class="line">class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&gt;</span><br><span class="line">&lt;property name=&quot;locations&quot;&gt;</span><br><span class="line">&lt;list&gt;</span><br><span class="line">&lt;value&gt;classpath*:application_local.properties&lt;/value&gt;</span><br><span class="line">&lt;/list&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure></p><p>不要将dataSource和shardingjdbc的规则放在一起，因为dataSource里面的${}和shardingjdbc里面的${}解析的时候用的不是一个工具。</p>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> 分表分库 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shardingjdbc分表分库，mysql主从分离</title>
      <link href="/2018/09/26/%E5%85%B3%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B0%B4%E5%B9%B3%E6%8B%86%E5%88%86%E5%92%8C%E5%9E%82%E7%9B%B4%E6%8B%86%E5%88%86/"/>
      <url>/2018/09/26/%E5%85%B3%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B0%B4%E5%B9%B3%E6%8B%86%E5%88%86%E5%92%8C%E5%9E%82%E7%9B%B4%E6%8B%86%E5%88%86/</url>
      <content type="html"><![CDATA[<p>###垂直拆分<br>垂直拆分 分为两种，一种是垂直分表，一种是垂直分库。</p><ul><li>垂直分表<br>垂直分表就是单表的列数比较多，并且有一些列存放的数据比较多，比如文章表的文章内容，或者一些列不需要经常查看的。这时可以使用垂直分表，将那些大容量的，不经常查看的列分到另一张表里面去，这样便可以增加查询的速度。</li><li>垂直分库</li></ul><p>###水平拆分</p>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> 分表分库 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo集成gitalk的一些问题</title>
      <link href="/2018/09/10/hexo%E9%9B%86%E6%88%90gitalk%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
      <url>/2018/09/10/hexo%E9%9B%86%E6%88%90gitalk%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h4 id="新建OAuth-APP"><a href="#新建OAuth-APP" class="headerlink" title="新建OAuth APP"></a>新建OAuth APP</h4><ul><li>在github上Settings - Developer settings右边点击新建</li><li>Application name任意填写</li><li>Homepage URL和Authorization callback URL填写博客主页</li></ul><p>新建完成后生成Client ID和Client Secret</p><h4 id="设置gitalk"><a href="#设置gitalk" class="headerlink" title="设置gitalk"></a>设置gitalk</h4><ul><li>owner 填写github用户名</li><li>repo 填写博客的github仓库名称,例如xxx.github.io</li><li>client_id 填写Client ID</li><li>client_secret 填写Client Secret</li><li>admin 填写github用户名</li></ul><p>如果评论不了,可能是github邮箱未验证,登录验证即可.</p>]]></content>
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo d 无响应 hexo deploy 提交git失败</title>
      <link href="/2018/09/07/hexo-d-%E6%97%A0%E5%93%8D%E5%BA%94-hexo-d-%E6%8F%90%E4%BA%A4git%E5%A4%B1%E8%B4%A5/"/>
      <url>/2018/09/07/hexo-d-%E6%97%A0%E5%93%8D%E5%BA%94-hexo-d-%E6%8F%90%E4%BA%A4git%E5%A4%B1%E8%B4%A5/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">develop:</span><br><span class="line">type: git</span><br><span class="line">repo: git@github.com:xxx/xxx.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>在type: repo: branch:的后面必须有一个空格,不然就会发生这些错误</p>]]></content>
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/09/07/hello-world/"/>
      <url>/2018/09/07/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
